'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ = require('../');

var _EventSourceException = require('./EventSourceException');

var _EventSourceException2 = _interopRequireDefault(_EventSourceException);

var _EventSourceAdapterLoader = require('./EventSourceAdapterLoader');

var _EventSourceAdapterLoader2 = _interopRequireDefault(_EventSourceAdapterLoader);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } } /* Import the other event classes */


var EventSource = function EventSource(config) {
  var _this = this;

  _classCallCheck(this, EventSource);

  /* Check that some config was passed in */
  if (!config || !config.adapter || !config.subscribe || !config.publish || !config.config) {
    throw new _EventSourceException2.default('Invalid config when creating new event source');
  }

  /* Store the config */
  this.config = config;

  /* Attempt to load the adpater */
  this.adapter = _EventSourceAdapterLoader2.default.get(this.config.adapter);

  /* Create an instance of the adapter */
  this.adapterInstance = new this.adapter(config);

  /* Once the adapter is loaded define the events */
  this.config.subscribe.forEach(function (e) {
    _.EventBus.defineEvent(e.name);
  });

  this.config.publish.forEach(function (e) {
    _.EventBus.defineEvent(e.name);
  });

  /* Define a list of subscriptions */
  this.subscriptions = [];

  /* Now that the events have been defined let's subscribe to them */
  this.config.subscribe.forEach(function (e) {
    var subscription = new _.Subscription(e.name, e.options, function (event) {
      /* Pass the event through to the adapter */
      _this.adapterInstance.onEvent(e.mapTo ? e.mapTo : event.getName(), event);
    });

    /* Add the subscription to the list of subscriptions */
    _this.subscriptions.push(subscription);
  });
};

exports.default = EventSource;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb3JlL2V2ZW50LXNvdXJjZS9FdmVudFNvdXJjZS5qcyJdLCJuYW1lcyI6WyJFdmVudFNvdXJjZSIsImNvbmZpZyIsImFkYXB0ZXIiLCJzdWJzY3JpYmUiLCJwdWJsaXNoIiwiZ2V0IiwiYWRhcHRlckluc3RhbmNlIiwiZm9yRWFjaCIsImUiLCJkZWZpbmVFdmVudCIsIm5hbWUiLCJzdWJzY3JpcHRpb25zIiwic3Vic2NyaXB0aW9uIiwib3B0aW9ucyIsImV2ZW50Iiwib25FdmVudCIsIm1hcFRvIiwiZ2V0TmFtZSIsInB1c2giXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBOztBQUNBOzs7O0FBQ0E7Ozs7OzswSkFIQTs7O0lBS01BLFcsR0FDSixxQkFBYUMsTUFBYixFQUFzQjtBQUFBOztBQUFBOztBQUNwQjtBQUNBLE1BQUssQ0FBQ0EsTUFBRCxJQUFXLENBQUNBLE9BQU9DLE9BQW5CLElBQThCLENBQUNELE9BQU9FLFNBQXRDLElBQW1ELENBQUNGLE9BQU9HLE9BQTNELElBQXNFLENBQUNILE9BQU9BLE1BQW5GLEVBQTRGO0FBQzFGLFVBQU0sbUNBQTBCLCtDQUExQixDQUFOO0FBQ0Q7O0FBRUQ7QUFDQSxPQUFLQSxNQUFMLEdBQWNBLE1BQWQ7O0FBRUE7QUFDQSxPQUFLQyxPQUFMLEdBQWUsbUNBQXlCRyxHQUF6QixDQUE4QixLQUFLSixNQUFMLENBQVlDLE9BQTFDLENBQWY7O0FBRUE7QUFDQSxPQUFLSSxlQUFMLEdBQXVCLElBQUksS0FBS0osT0FBVCxDQUFrQkQsTUFBbEIsQ0FBdkI7O0FBRUE7QUFDQSxPQUFLQSxNQUFMLENBQVlFLFNBQVosQ0FBc0JJLE9BQXRCLENBQThCLFVBQUVDLENBQUYsRUFBUztBQUNyQyxlQUFTQyxXQUFULENBQXNCRCxFQUFFRSxJQUF4QjtBQUNELEdBRkQ7O0FBSUEsT0FBS1QsTUFBTCxDQUFZRyxPQUFaLENBQW9CRyxPQUFwQixDQUE0QixVQUFFQyxDQUFGLEVBQVM7QUFDbkMsZUFBU0MsV0FBVCxDQUFzQkQsRUFBRUUsSUFBeEI7QUFDRCxHQUZEOztBQUlBO0FBQ0EsT0FBS0MsYUFBTCxHQUFxQixFQUFyQjs7QUFFQTtBQUNBLE9BQUtWLE1BQUwsQ0FBWUUsU0FBWixDQUFzQkksT0FBdEIsQ0FBOEIsVUFBRUMsQ0FBRixFQUFTO0FBQ3JDLFFBQU1JLGVBQWUsbUJBQWtCSixFQUFFRSxJQUFwQixFQUEwQkYsRUFBRUssT0FBNUIsRUFBcUMsVUFBRUMsS0FBRixFQUFhO0FBQ3JFO0FBQ0EsWUFBS1IsZUFBTCxDQUFxQlMsT0FBckIsQ0FBOEJQLEVBQUVRLEtBQUYsR0FBVVIsRUFBRVEsS0FBWixHQUFvQkYsTUFBTUcsT0FBTixFQUFsRCxFQUFtRUgsS0FBbkU7QUFDRCxLQUhvQixDQUFyQjs7QUFLQTtBQUNBLFVBQUtILGFBQUwsQ0FBbUJPLElBQW5CLENBQXlCTixZQUF6QjtBQUNELEdBUkQ7QUFTRCxDOztrQkFHWVosVyIsImZpbGUiOiJFdmVudFNvdXJjZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEltcG9ydCB0aGUgb3RoZXIgZXZlbnQgY2xhc3NlcyAqL1xuaW1wb3J0IHsgRXZlbnRCdXMsIFN1YnNjcmlwdGlvbiB9IGZyb20gJy4uLyc7XG5pbXBvcnQgRXZlbnRTb3VyY2VFeGNlcHRpb24gZnJvbSAnLi9FdmVudFNvdXJjZUV4Y2VwdGlvbic7XG5pbXBvcnQgRXZlbnRTb3VyY2VBZGFwdGVyTG9hZGVyIGZyb20gJy4vRXZlbnRTb3VyY2VBZGFwdGVyTG9hZGVyJztcblxuY2xhc3MgRXZlbnRTb3VyY2Uge1xuICBjb25zdHJ1Y3RvciggY29uZmlnICkge1xuICAgIC8qIENoZWNrIHRoYXQgc29tZSBjb25maWcgd2FzIHBhc3NlZCBpbiAqL1xuICAgIGlmICggIWNvbmZpZyB8fCAhY29uZmlnLmFkYXB0ZXIgfHwgIWNvbmZpZy5zdWJzY3JpYmUgfHwgIWNvbmZpZy5wdWJsaXNoIHx8ICFjb25maWcuY29uZmlnICkge1xuICAgICAgdGhyb3cgbmV3IEV2ZW50U291cmNlRXhjZXB0aW9uKCAnSW52YWxpZCBjb25maWcgd2hlbiBjcmVhdGluZyBuZXcgZXZlbnQgc291cmNlJyApO1xuICAgIH1cblxuICAgIC8qIFN0b3JlIHRoZSBjb25maWcgKi9cbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcblxuICAgIC8qIEF0dGVtcHQgdG8gbG9hZCB0aGUgYWRwYXRlciAqL1xuICAgIHRoaXMuYWRhcHRlciA9IEV2ZW50U291cmNlQWRhcHRlckxvYWRlci5nZXQoIHRoaXMuY29uZmlnLmFkYXB0ZXIgKTtcblxuICAgIC8qIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiB0aGUgYWRhcHRlciAqL1xuICAgIHRoaXMuYWRhcHRlckluc3RhbmNlID0gbmV3IHRoaXMuYWRhcHRlciggY29uZmlnICk7XG5cbiAgICAvKiBPbmNlIHRoZSBhZGFwdGVyIGlzIGxvYWRlZCBkZWZpbmUgdGhlIGV2ZW50cyAqL1xuICAgIHRoaXMuY29uZmlnLnN1YnNjcmliZS5mb3JFYWNoKCggZSApID0+IHtcbiAgICAgIEV2ZW50QnVzLmRlZmluZUV2ZW50KCBlLm5hbWUgKTtcbiAgICB9KTtcblxuICAgIHRoaXMuY29uZmlnLnB1Ymxpc2guZm9yRWFjaCgoIGUgKSA9PiB7XG4gICAgICBFdmVudEJ1cy5kZWZpbmVFdmVudCggZS5uYW1lICk7XG4gICAgfSk7XG5cbiAgICAvKiBEZWZpbmUgYSBsaXN0IG9mIHN1YnNjcmlwdGlvbnMgKi9cbiAgICB0aGlzLnN1YnNjcmlwdGlvbnMgPSBbXTtcblxuICAgIC8qIE5vdyB0aGF0IHRoZSBldmVudHMgaGF2ZSBiZWVuIGRlZmluZWQgbGV0J3Mgc3Vic2NyaWJlIHRvIHRoZW0gKi9cbiAgICB0aGlzLmNvbmZpZy5zdWJzY3JpYmUuZm9yRWFjaCgoIGUgKSA9PiB7XG4gICAgICBjb25zdCBzdWJzY3JpcHRpb24gPSBuZXcgU3Vic2NyaXB0aW9uKCBlLm5hbWUsIGUub3B0aW9ucywgKCBldmVudCApID0+IHtcbiAgICAgICAgLyogUGFzcyB0aGUgZXZlbnQgdGhyb3VnaCB0byB0aGUgYWRhcHRlciAqL1xuICAgICAgICB0aGlzLmFkYXB0ZXJJbnN0YW5jZS5vbkV2ZW50KCBlLm1hcFRvID8gZS5tYXBUbyA6IGV2ZW50LmdldE5hbWUoKSwgZXZlbnQgKTtcbiAgICAgIH0pO1xuXG4gICAgICAvKiBBZGQgdGhlIHN1YnNjcmlwdGlvbiB0byB0aGUgbGlzdCBvZiBzdWJzY3JpcHRpb25zICovXG4gICAgICB0aGlzLnN1YnNjcmlwdGlvbnMucHVzaCggc3Vic2NyaXB0aW9uICk7XG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRXZlbnRTb3VyY2U7XG4iXX0=